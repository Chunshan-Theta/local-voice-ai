# Use newer ROCm PyTorch image for better compatibility
FROM rocm/pytorch

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    git \
    curl \
    rocm-dev \
    rocm-libs \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip
RUN pip install --upgrade pip

# Set working directory
WORKDIR /app

# Copy requirements file and install Python dependencies
COPY requirements.txt .

# Install PyTorch with ROCm support and other dependencies
RUN pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.0
RUN pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY app.py .

# Set ROCm environment variables for optimal GPU performance
# Note: ROC_VISIBLE_DEVICES will be overridden by docker-compose HIP_VISIBLE_DEVICES
ENV HSA_OVERRIDE_GFX_VERSION=12.0.1
ENV PYTORCH_ROCM_ARCH=gfx1201

# Create necessary directories with proper permissions
RUN mkdir -p /app/tmp && chmod 755 /app/tmp
RUN mkdir -p /root/.cache/whisper

# Note: Running as root temporarily for GPU access troubleshooting
# Create non-root user for security (commented out for now)
# RUN useradd --create-home --shell /bin/bash app && \
#     chown -R app:app /app && \
#     chown -R app:app /root/.cache

# Switch to non-root user (commented out for now)
# USER app

# Expose port
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:5001/status || exit 1

# Start the application
CMD ["python", "app.py"]
